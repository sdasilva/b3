{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/scenes/MenuScene.ts","src/scenes/PlayScene.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.95d12447.map","sourceRoot":"..","sourcesContent":["export const CST = {\n    SCENES: {\n        LOAD: \"LOAD\",\n        MENU: \"MENU\",\n        PLAY: \"PLAY\"\n    },\n    IMAGE: {\n        START: \"start.png\"\n    },\n    AUDIO: {\n    },\n    SPRITE: {\n    },\n    ATLAS: { \n    }\n}","import { CST } from \"../CST\";\n\nexport class LoadScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.LOAD\n        })\n    }\n    init() { }\n    loadImages() {\n        this.load.setPath(\"./assets/image\");\n\n        for (let prop in CST.IMAGE) {\n            this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\n        }\n    }\n    loadAudio() {\n        this.load.setPath(\"./assets/audio\");\n\n        for (let prop in CST.AUDIO) {\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\n        }\n    }\n    preload() {\n        this.loadImages();\n        this.loadAudio();\n\n        let loadingBar = this.add.graphics({\n            fillStyle: {\n                color: 0xffffff\n            }\n        });\n\n        // //simulate loading\n        // for (let i = 0; i < 200; i++) {\n        //     this.load.spritesheet(\"cat\" + i, \"./assets/cat.png\", {\n        //         frameHeight: 32,\n        //         frameWidth: 32\n        //     });\n        // }\n\n        this.load.on(\"progress\", (percent: number) => {\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\n            console.log(percent);\n        });\n\n        this.load.on(\"complete\", () => { });\n\n        this.load.on(\"load\", (file: Phaser.Loader.File) => {\n            console.log(file.src);\n        });\n    }\n    create() {\n        this.scene.start(CST.SCENES.MENU);\n    }\n}","import { CST } from \"../CST\";\n\nexport class MenuScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.MENU\n        })\n    }\n    init() { }\n    create() {\n        let startButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.66, CST.IMAGE.START);\n\n        startButton.setInteractive();\n\n        startButton.on(\"pointerup\", () => {\n            this.scene.start(CST.SCENES.PLAY);\n        });\n    }\n}","import { CST } from \"../CST\";\n\nexport class PlayScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: CST.SCENES.PLAY\n        });\n    }\n    preload() { }\n    create() { }\n}","/** @type {import(\"../typings/phaser\")} */\n\nimport { LoadScene } from \"./scenes/LoadScene\";\nimport { MenuScene } from \"./scenes/MenuScene\";\nimport { PlayScene } from \"./scenes/PlayScene\";\n\nlet game: Phaser.Game = new Phaser.Game({\n    title: \"b3\",\n    width: 640,\n    height: 960,\n    type: Phaser.AUTO,\n    parent: \"game\",\n    scene: [\n        LoadScene, MenuScene, PlayScene\n    ],\n    input: {\n        keyboard: false,\n        mouse: true,\n        touch: true,\n        gamepad: false\n    },\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            gravity: { y: 0 }\n        }\n    },\n    backgroundColor: 0x202020,\n    render: {\n        pixelArt: true,\n        antialias: false\n    }\n});"]}